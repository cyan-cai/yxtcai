<?xml version="1.0" encoding="UTF-8"?>
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--status="WARN" :用于设置log4j2自身内部日志的信息输出级别，默认是OFF -->
<!--monitorInterval="30" :间隔秒数,自动检测配置文件的变更和重新配置本身 -->
<configuration status="INFO" monitorInterval="30">
	<properties>
		<!-- 日志存放根目录 -->
		<Property name="logFilePath">/home/yxt</Property>
		<!-- 日志文件名称和文件夹名称 -->
		<Property name="logFileName">spmgrsvc</Property>
	</properties>

	<!--先定义所有的appender -->
	<appenders>
		<!--这个输出控制台的配置 -->
		<console name="Console" target="SYSTEM_OUT">
			<!--PatternLayout :输出日志的格式,LOG4J2定义了输出代码,详见第二部分 -->
			<PatternLayout
				pattern="%d %MDC{ip}  [%X{X-B3-TraceId},%X{X-B3-SpanId},%X{X-B3-ParentSpanId},%X{X-Span-Export}] %p %c:%L [%t] - %m%n" />
		</console>
		<!-- 这个会打印出所有的info及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 -->
		<RollingFile name="RollingFileInfo"
			fileName="${logFilePath}/logs/${logFileName}/${date:yyyy-MM}/${date:yyyy-MM-dd}/${logFileName}.log"
			filePattern="${logFilePath}/logs/${logFileName}/${date:yyyy-MM}/${date:yyyy-MM-dd}/${logFileName}-%d{yyyy-MM-dd}-%i.log">
			<!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） -->
			<ThresholdFilter level="info" onMatch="ACCEPT"
				onMismatch="DENY" />
			<PatternLayout
					pattern="%d %MDC{ip}  [%X{X-B3-TraceId},%X{X-B3-SpanId},%X{X-B3-ParentSpanId},%X{X-Span-Export}] %p %c:%L [%t] - %m%n" />
			<!-- pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n" /> -->
			<Policies>
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="100 MB" />
			</Policies>
			<!-- 超过这个数量会覆盖之前生成的日志文件，循环覆盖 ，默认值7 -->
			<DefaultRolloverStrategy max="1000" />
		</RollingFile>
		<!-- 发送到logstash -->
		<!-- <Gelf name="logstash-gelf" host="udp:192.168.10.195" port="4560" version="1.1"> 
			<Field name="timestamp" pattern="%d{yyyy-MM-dd HH:mm:ss.SSS}" /> 
			<Field name="logger" pattern="%logger" /> 
			<Field name="level" pattern="%level" /> 
			<Field name="className"	pattern="%C" /> 
			<Field name="method" pattern="%M" /> 
			<Field name="line" pattern="%L"/> 
			<Field name="server" pattern="%host" /> 
			<Field name="indexName" pattern="gateway-service" /> 
			</Gelf> -->

	</appenders>
	<loggers>
		<!--过滤掉spring和mybatis的一些无用的DEBUG信息 -->
		<!--Logger节点用来单独指定日志的形式，name为包路径,比如要为org.springframework包下所有日志指定为INFO级别等。 -->
		<!-- <logger name="org.springframework" level="INFO"></logger>
		<logger name="org.mybatis" level="INFO"></logger> -->
		
		<!-- Root节点用来指定项目的根日志，如果没有单独指定Logger，那么就会默认使用该Root日志输出 -->
		<root level="INFO">
			<appender-ref ref="Console" />
			<appender-ref ref="RollingFileInfo" />
			<!-- <appender-ref ref="logstash-gelf" /> -->
		</root>
	</loggers>
</configuration>
